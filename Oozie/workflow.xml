<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.2" name="flightdata-workflow">
   <start to="start-node" />
   <action name="start-node">
      <map-reduce>
         <job-tracker>${jobTracker}</job-tracker>
         <name-node>${nameNode}</name-node>
         <prepare>
            <delete path="${nameNode}/user/${wf:user()}/airport/output/probability/output" />
         </prepare>
         <configuration>
            <property>
               <name>mapred.mapper.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.reducer.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.job.queue.name</name>
               <value>${queueName}</value>
            </property>
            <property>
               <name>mapreduce.map.class</name>
               <value>ProbabilityMapper</value>
            </property>
            <property>
               <name>mapreduce.reduce.class</name>
               <value>ProbabilityReducer</value>
            </property>
            <property>
               <name>mapred.output.key.class</name>
               <value>org.apache.hadoop.io.Text</value>
            </property>
	    <property>
               <name>mapred.output.value.class</name>
               <value>org.apache.hadoop.io.DoubleWritable</value>
            </property>
            <property>
               <name>mapred.map.tasks</name>
               <value>1</value>
            </property>
            <property>
               <name>mapred.input.dir</name>
               <value>/user/${wf:user()}/airport/input/*</value>
            </property>
            <property>
               <name>mapred.output.dir</name>
               <value>/user/${wf:user()}/airport/output/probability/output</value>
            </property>
         </configuration>
      </map-reduce>
      <ok to="mr-node1" />
      <error to="mr-node1" />
   </action>


<action name="start-node1">
      <map-reduce>
         <job-tracker>${jobTracker}</job-tracker>
         <name-node>${nameNode}</name-node>
         <prepare>
            <delete path="${nameNode}/user/${wf:user()}/airport/output/taxiIn/output" />
         </prepare>
         <configuration>
            <property>
               <name>mapred.mapper.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.reducer.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.job.queue.name</name>
               <value>${queueName}</value>
            </property>
            <property>
               <name>mapreduce.map.class</name>
               <value>TaxiInMapper</value>
            </property>
            <property>
               <name>mapreduce.reduce.class</name>
               <value>TaxiInReducer</value>
            </property>
            <property>
               <name>mapred.output.key.class</name>
               <value>org.apache.hadoop.io.Text</value>
            </property>
            <property>
               <name>mapred.output.value.class</name>
               <value>org.apache.hadoop.io.DoubleWritable</value>
            </property>
            <property>
               <name>mapred.map.tasks</name>
               <value>1</value>
            </property>
            <property>
               <name>mapred.input.dir</name>
               <value>/user/${wf:user()}/airport/input/*</value>
            </property>
            <property>
               <name>mapred.output.dir</name>
               <value>/user/${wf:user()}/airport/output/TaxiIn/output</value>
            </property>
         </configuration>
      </map-reduce>
      <ok to="mr-node2" />
      <error to="mr-node2" />
   </action>

<action name="start-node2">
      <map-reduce>
         <job-tracker>${jobTracker}</job-tracker>
         <name-node>${nameNode}</name-node>
         <prepare>
            <delete path="${nameNode}/user/${wf:user()}/airport/output/taxiOut/output" />
         </prepare>
         <configuration>
            <property>
               <name>mapred.mapper.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.reducer.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.job.queue.name</name>
               <value>${queueName}</value>
            </property>
            <property>
               <name>mapreduce.map.class</name>
               <value>TaxiOutMapper</value>
            </property>
            <property>
               <name>mapreduce.reduce.class</name>
               <value>TaxiOutReducer</value>
            </property>
            <property>
               <name>mapred.output.key.class</name>
               <value>org.apache.hadoop.io.Text</value>
            </property>
	    <property>
               <name>mapred.output.value.class</name>
               <value>org.apache.hadoop.io.DoubleWritable</value>
            </property>
            <property>
               <name>mapred.map.tasks</name>
               <value>1</value>
            </property>
            <property>
               <name>mapred.input.dir</name>
               <value>/user/${wf:user()}/airport/input/*</value>
            </property>
            <property>
               <name>mapred.output.dir</name>
               <value>/user/${wf:user()}/airport/output/TaxiOut/output</value>
            </property>
         </configuration>
      </map-reduce>
      <ok to="mr-node3" />
      <error to="mr-node3" />
   </action>


<action name="start-node3">
      <map-reduce>
         <job-tracker>${jobTracker}</job-tracker>
         <name-node>${nameNode}</name-node>
         <prepare>
            <delete path="${nameNode}/user/${wf:user()}/airport/output/cancelReason/output}" />
         </prepare>
         <configuration>
            <property>
               <name>mapred.mapper.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.reducer.new-api</name>
               <value>true</value>
            </property>
            <property>
               <name>mapred.job.queue.name</name>
               <value>${queueName}</value>
            </property>
            <property>
               <name>mapreduce.map.class</name>
               <value>CancelReasonMapper</value>
            </property>
            <property>
               <name>mapreduce.reduce.class</name>
               <value>CancelReasonReducer</value>
            </property>
            <property>
               <name>mapred.output.key.class</name>
               <value>org.apache.hadoop.io.Text</value>
            </property>
            <property>
               <name>mapred.output.value.class</name>
               <value>org.apache.hadoop.io.IntWritable</value>
            </property>
            <property>
               <name>mapred.map.tasks</name>
               <value>1</value>
            </property>
            <property>
               <name>mapred.input.dir</name>
               <value>/user/${wf:user()}/airport/input/*</value>
            </property>
            <property>
               <name>mapred.output.dir</name>
               <value>/user/${wf:user()}/airport/output/cancelReason/output</value>
            </property>
         </configuration>
      </map-reduce>
      <ok to="end" />
      <error to="fail" />
   </action>


   <kill name="fail">
      <message>Map/Reduce job failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
   </kill>
   <end name="end" />
</workflow-app>